{
	"client-services": {
		"prefix": "cnServices",
		"body": [
			"import { apiSlice } from \"../../../utilities/redux/slices/apiSlice\"\r",
			"const ENDPOINT_URL = '/app/${1:Service}'\r",
			"\r",
			"export const ${1:Service}ApiSlice = apiSlice.injectEndpoints({\r",
			"    endpoints: (builder) => ({\r",
			"        create${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (body) => ({\r",
			"                url: `\\${ENDPOINT_URL}`,\r",
			"                method: 'POST',\r",
			"                body\r",
			"            }),\r",
			"            invalidatesTags: ['${1:Service}']\r",
			"        }),\r",
			"        update${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (body) => ({\r",
			"                url: `\\${ENDPOINT_URL}`,\r",
			"                method: 'PATCH',\r",
			"                body\r",
			"            }),\r",
			"            invalidatesTags: ['${1:Service}', '${1:Service}/id']\r",
			"        }),\r",
			"        delete${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (body) => ({\r",
			"                url: `\\${ENDPOINT_URL}`,\r",
			"                method: 'DELETE',\r",
			"                body\r",
			"            }),\r",
			"            invalidatesTags: ['${1:Service}']\r",
			"        }),\r",
			"        distinct${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (params) => ({\r",
			"                url: `\\${ENDPOINT_URL}/id`,\r",
			"                method: 'GET',\r",
			"                params\r",
			"            }),\r",
			"            providesTags: ['${1:Service}/id']\r",
			"        }),\r",
			"        fetchAll${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (params) => ({\r",
			"                url: `\\${ENDPOINT_URL}`,\r",
			"                method: 'GET',\r",
			"                params\r",
			"            }),\r",
			"            providesTags: ['${1:Service}']\r",
			"        }),\r",
			"        search${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (params) => ({\r",
			"                url: `\\${ENDPOINT_URL}/search`,\r",
			"                method: 'GET',\r",
			"                params\r",
			"            }),\r",
			"            providesTags: ['${1:Service}']\r",
			"        }),\r",
			"        specify${1/(.*)/${1:/capitalize}/}: builder.mutation({\r",
			"            query: (params) => ({\r",
			"                url: `\\${ENDPOINT_URL}/specify`,\r",
			"                method: 'GET',\r",
			"                params\r",
			"            }),\r",
			"            providesTags: ['${1:Service}']\r",
			"        }),\r",
			"    })\r",
			"})\r",
			"\r",
			"export const {\r",
			"    useCreate${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useUpdate${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useDelete${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useDistinct${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useFetchAll${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useSearch${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"    useSpecify${1/(.*)/${1:/capitalize}/}Mutation,\r",
			"} = ${1:Service}ApiSlice"
		],
		"description": ""
	}
}